<?php
/**
 * Customizer Data importer class.
 *
 * @since  1.0.0
 * @package WPHobby Demo Import
 */

defined( 'ABSPATH' ) or exit;

/**
 * Customizer Data importer class.
 *
 * @since  1.0.0
 */
class WHDI_Customizer_Import {

	/**
	 * Instance of WHDI_Customizer_Import
	 *
	 * @since  1.0.0
	 * @var WHDI_Customizer_Import
	 */
	private static $_instance = null;

	/**
	 * Instantiate WHDI_Customizer_Import
	 *
	 * @since  1.0.0
	 * @return (Object) WHDI_Customizer_Import
	 */
	public static function instance() {

		if ( ! isset( self::$_instance ) ) {
			self::$_instance = new self;
		}

		return self::$_instance;
	}

	/**
	 * Import customizer from a DAT file, generated by the Customizer Export/Import plugin.
	 *
	 * @param string $customizer_import_file_path path to the customizer import file.
	 */
	public static function import( $customizer_data ) {
		// Try to import the customizer settings.
		$results = self::import_customizer_options( $customizer_data );

		// Check for errors, else write the results to the log file.
		if ( is_wp_error( $results ) ) {
			$error_message = $results->get_error_message();

			// Write error to log file.
			WHDI_Importer_Log::add( 'Customizer settings import error:' . $error_message );
		}
		else {
			// Add this message to log file.
			WHDI_Importer_Log::add( 'Customizer settings import finished!');
		}
	}

	/**
	 * Imports uploaded mods and calls WordPress core customize_save actions so
	 * themes that hook into them can act before mods are saved to the database.
	 *
	 * Update: WP core customize_save actions were removed, because of some errors.
	 *
	 * @since 1.1.1
	 * @param string $import_file_path Path to the import file.
	 * @return void|WP_Error
	 */
	public static function import_customizer_options( $customizer_data ) {
		// Setup global vars.
		global $wp_customize;

		// Setup internal vars.
		$template = get_template();

		$data = $customizer_data;

		// Data checks.
		if ( ! is_array( $data ) && ( ! isset( $data['template'] ) || ! isset( $data['mods'] ) ) ) {
			return new \WP_Error(
				'customizer_import_data_error',
				esc_html__( 'Error: The customizer import file is not in a correct format. Please make sure to use the correct customizer import file.', 'wphobby-demo-import' )
			);
		}
		if ( $data['template'] !== $template ) {
			return new \WP_Error(
				'customizer_import_wrong_theme',
				esc_html__( 'Error: The customizer import file is not suitable for current theme. You can only import customizer settings for the same theme or a child theme.', 'wphobby-demo-import' )
			);
		}


		// Import custom options.
		if ( isset( $data['options'] ) ) {
			// Require modified customizer options class.
			if ( ! class_exists( '\WP_Customize_Setting' ) ) {
				require_once ABSPATH . 'wp-includes/class-wp-customize-setting.php';
			}

			foreach ( $data['options'] as $option_key => $option_value ) {
				$option = new CustomizerOption( $wp_customize, $option_key, array(
					'default'    => '',
					'type'       => 'option',
					'capability' => 'edit_theme_options',
				) );

				$option->import( $option_value );
			}
		}

		// Loop through the mods and save the mods.
		foreach ( $data['mods'] as $key => $val ) {
			if ( $use_wp_customize_save_hooks ) {
				do_action( 'customize_save_' . $key, $wp_customize );
			}

			set_theme_mod( $key, $val );
		}
	}
}
